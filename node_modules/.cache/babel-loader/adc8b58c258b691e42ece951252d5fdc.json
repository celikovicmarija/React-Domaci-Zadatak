{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marija\\\\react-weather\\\\src\\\\components\\\\AppLayout.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, CardHeader, CardMedia, Divider, Typography, Grid } from \"@material-ui/core\";\nimport Forecast from \"./Forecast\";\nimport WeatherCardSubheader from \"./WeatherCardSubheader\";\nconst useStyles = makeStyles(theme => ({\n  atmospheric: {\n    fontSize: \"28px\",\n    padding: \"5px\"\n  },\n  buttons: {\n    color: \"black\"\n  },\n  card: {\n    minWidth: 600,\n    minHeight: 600\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  error: {\n    color: \"red\",\n    padding: \"10px\"\n  },\n  fullList: {\n    width: \"auto\"\n  },\n  layout: {\n    marginTop: \"20px\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  recommendation: {\n    fontFamily: \"Montserrat, sans-serif\",\n    padding: \"20px 0px 10px 0px\",\n    fontSize: \"26px\",\n    textAlign: \"center\"\n  },\n  root: {\n    flexiGrow: 1,\n    color: \"black\"\n  },\n  search: {\n    marginTop: \"100px\"\n  },\n  wi: {\n    color: \"#673ab7\"\n  }\n}));\nexport default function AppLayout(props) {\n  const classes = useStyles();\n  const {\n    currentWeather,\n    forecast,\n    icon,\n    recommendation\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.layout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WeatherCard, {\n    currentWeather: currentWeather,\n    forecast: forecast,\n    icon: icon,\n    recommendation: recommendation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }))));\n}\n\nconst WeatherCard = props => {\n  const classes = useStyles();\n  const humidity = \"wi wi-humidity\";\n  const strongWind = \"wi wi-strong-wind\";\n  const {\n    currentWeather,\n    forecast,\n    icon,\n    recommendation\n  } = props;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: currentWeather.city + \", \" + currentWeather.country,\n    subheader: /*#__PURE__*/React.createElement(WeatherCardSubheader, {\n      currentWeather: currentWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: `${icon} ${classes.wi}`,\n    src: icon,\n    style: {\n      fontSize: \"128px\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    className: \"big-temp\",\n    color: \"textPrimary\",\n    component: \"h2\",\n    style: {\n      fontFamily: \"Montserrat\",\n      paddingTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, currentWeather.temperature, \"\\xB0C\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Feels like \", currentWeather.feels_like, \"\\xB0C\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    className: \"atmospheric-conditions\",\n    color: \"textSecondary\",\n    gutterBottom: true,\n    style: {\n      paddingTop: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${strongWind} ${classes.wi} ${classes.atmospheric}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), currentWeather.wind_speed, \" km/h Winds\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: `${humidity} ${classes.wi} ${classes.atmospheric}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), currentWeather.humidity, \"% Humidity\"), /*#__PURE__*/React.createElement(Typography, {\n    className: `${classes.recommendation} recommendation`,\n    color: \"textPrimary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, recommendation), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Forecast, {\n    forecast: forecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["C:/Users/Marija/react-weather/src/components/AppLayout.js"],"names":["React","makeStyles","Card","CardContent","CardHeader","CardMedia","Divider","Typography","Grid","Forecast","WeatherCardSubheader","useStyles","theme","atmospheric","fontSize","padding","buttons","color","card","minWidth","minHeight","container","display","flexWrap","error","fullList","width","layout","marginTop","paper","spacing","textAlign","palette","text","secondary","recommendation","fontFamily","root","flexiGrow","search","wi","AppLayout","props","classes","currentWeather","forecast","icon","WeatherCard","humidity","strongWind","city","country","float","paddingTop","temperature","feels_like","wind_speed"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Divider,\r\n  Typography,\r\n  Grid\r\n} from \"@material-ui/core\";\r\n\r\nimport Forecast from \"./Forecast\";\r\nimport WeatherCardSubheader from \"./WeatherCardSubheader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  atmospheric: {\r\n    fontSize: \"28px\",\r\n    padding: \"5px\"\r\n  },\r\n  buttons: {\r\n    color: \"black\"\r\n  },\r\n  card: {\r\n    minWidth: 600,\r\n    minHeight: 600\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    padding: \"10px\"\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  },\r\n  layout: {\r\n    marginTop: \"20px\"\r\n  },\r\n\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  },\r\n  recommendation: {\r\n    fontFamily: \"Montserrat, sans-serif\",\r\n    padding: \"20px 0px 10px 0px\",\r\n    fontSize: \"26px\",\r\n    textAlign: \"center\"\r\n  },\r\n  root: {\r\n    flexiGrow: 1,\r\n    color: \"black\"\r\n  },\r\n  search: {\r\n    marginTop: \"100px\"\r\n  },\r\n  wi: {\r\n    color: \"#673ab7\"\r\n  }\r\n}));\r\n\r\nexport default function AppLayout(props) {\r\n  const classes = useStyles();\r\n  const { currentWeather, forecast, icon, recommendation } = props;\r\n\r\n  return (\r\n    <div className={classes.layout}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <WeatherCard\r\n            currentWeather={currentWeather}\r\n            forecast={forecast}\r\n            icon={icon}\r\n            recommendation={recommendation}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst WeatherCard = props => {\r\n  const classes = useStyles();\r\n  const humidity = \"wi wi-humidity\";\r\n  const strongWind = \"wi wi-strong-wind\";\r\n  const { currentWeather, forecast, icon, recommendation } = props;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        title={currentWeather.city + \", \" + currentWeather.country}\r\n        subheader={<WeatherCardSubheader currentWeather={currentWeather} />}\r\n      />\r\n      <CardContent>\r\n        <CardMedia\r\n          className={`${icon} ${classes.wi}`}\r\n          src={icon}\r\n          style={{ fontSize: \"128px\", float: \"right\" }}\r\n        />\r\n        <Typography\r\n          variant=\"h2\"\r\n          className=\"big-temp\"\r\n          color=\"textPrimary\"\r\n          component=\"h2\"\r\n          style={{ fontFamily: \"Montserrat\", paddingTop: \"30px\" }}\r\n        >\r\n          {currentWeather.temperature}&deg;C\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" color=\"textSecondary\" gutterBottom>\r\n          Feels like {currentWeather.feels_like}&deg;C\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n          className=\"atmospheric-conditions\"\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n          style={{ paddingTop: \"40px\" }}\r\n        >\r\n          <span\r\n            className={`${strongWind} ${classes.wi} ${classes.atmospheric}`}\r\n          ></span>\r\n          {currentWeather.wind_speed} km/h Winds{\" \"}\r\n          <span\r\n            className={`${humidity} ${classes.wi} ${classes.atmospheric}`}\r\n          ></span>\r\n          {currentWeather.humidity}% Humidity\r\n        </Typography>\r\n        <Typography\r\n          className={`${classes.recommendation} recommendation`}\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n        >\r\n          {recommendation}\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n        <Forecast forecast={forecast} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}