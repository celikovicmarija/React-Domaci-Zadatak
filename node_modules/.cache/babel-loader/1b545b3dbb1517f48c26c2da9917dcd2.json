{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marija\\\\react-weather\\\\src\\\\components\\\\Forecast.js\";\nimport React from \"react\";\nimport { IconButton, List, ListItem, ListItemText, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport dayjs from \"dayjs\";\nimport * as weatherIcons from \"../icons\";\nconst useStyles = makeStyles(theme => ({\n  wi: {\n    color: \"#673ab7\"\n  }\n}));\nexport default function Forecast(props) {\n  const classes = useStyles();\n  const prefix = \"wi wi-\";\n  const {\n    forecast\n  } = props;\n  const result = forecast.map((item, index) => {\n    const currentHour = dayjs(item.date).format(\"H\");\n    const timeOfDay = currentHour > 7 && currentHour < 19 ? \"day\" : \"night\";\n    const icon = prefix + weatherIcons.default[timeOfDay][item.icon_id].icon;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: index,\n      className: \"forecastItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      className: \"week-day\",\n      primary: dayjs(item.dt_txt).format(\"dddd\"),\n      style: {\n        flex: \"1 1 0%\",\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      disabled: false,\n      \"aria-label\": \"forecast icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `${classes.wi} ${icon}`,\n      style: {\n        fontSize: \"24px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"temp\",\n      style: {\n        flex: \"1 1 0%\",\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"span\",\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, item.min, \"\\xB0 /\", \" \"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"span\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, item.max, \"\\xB0\")));\n  });\n  return /*#__PURE__*/React.createElement(List, {\n    \"aria-label\": \"forecast data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }, result);\n}","map":{"version":3,"sources":["C:/Users/Marija/react-weather/src/components/Forecast.js"],"names":["React","IconButton","List","ListItem","ListItemText","Typography","makeStyles","dayjs","weatherIcons","useStyles","theme","wi","color","Forecast","props","classes","prefix","forecast","result","map","item","index","currentHour","date","format","timeOfDay","icon","default","icon_id","dt_txt","flex","textAlign","fontSize","min","max"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport dayjs from \"dayjs\";\r\nimport * as weatherIcons from \"../icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  wi: {\r\n    color: \"#673ab7\"\r\n  }\r\n}));\r\n\r\nexport default function Forecast(props) {\r\n  const classes = useStyles();\r\n  const prefix = \"wi wi-\";\r\n  const { forecast } = props;\r\n  const result = forecast.map((item, index) => {\r\n    const currentHour = dayjs(item.date).format(\"H\");\r\n    const timeOfDay = currentHour > 7 && currentHour < 19 ? \"day\" : \"night\";\r\n    const icon = prefix + weatherIcons.default[timeOfDay][item.icon_id].icon;\r\n    return (\r\n      <ListItem key={index} className=\"forecastItem\">\r\n        <ListItemText\r\n          className=\"week-day\"\r\n          primary={dayjs(item.dt_txt).format(\"dddd\")}\r\n          style={{ flex: \"1 1 0%\", textAlign: \"left\" }}\r\n        ></ListItemText>\r\n        <IconButton disabled={false} aria-label=\"forecast icon\">\r\n          <span\r\n            className={`${classes.wi} ${icon}`}\r\n            style={{ fontSize: \"24px\" }}\r\n          ></span>\r\n        </IconButton>\r\n        <span className=\"temp\" style={{ flex: \"1 1 0%\", textAlign: \"right\" }}>\r\n          <Typography variant=\"body2\" component=\"span\" color=\"textPrimary\">\r\n            {item.min}&deg; /{\" \"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"span\" color=\"textSecondary\">\r\n            {item.max}&deg;\r\n          </Typography>\r\n        </span>\r\n      </ListItem>\r\n    );\r\n  });\r\n\r\n  return <List aria-label=\"forecast data\">{result}</List>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}