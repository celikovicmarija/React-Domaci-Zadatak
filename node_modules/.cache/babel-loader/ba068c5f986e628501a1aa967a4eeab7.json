{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marija\\\\react-weather\\\\src\\\\components\\\\WeatherSearch.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { CircularProgress, FormControl, Grid, Input, InputAdornment, InputLabel, Tooltip, Typography } from \"@material-ui/core\";\nimport Search from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  error: {\n    color: \"red\",\n    padding: \"10px\"\n  },\n  search: {\n    marginTop: \"10px\"\n  }\n}));\nexport default function WeatherSearch(props) {\n  const classes = useStyles();\n  const {\n    onCityChange,\n    error\n  } = props;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isSearching, setSearching] = useState(false); //const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  const hasError = error ? true : false;\n\n  const handleSearch = event => {\n    setSearching(true);\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      onCityChange(debouncedSearchTerm);\n      setSearching(false);\n    }\n  }, [onCityChange, debouncedSearchTerm, isSearching]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"search-city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Unesi naziv grada:\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"search-city\",\n    role: \"search\",\n    type: \"text\",\n    error: hasError,\n    onChange: handleSearch,\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Optional: Enter a two-letter country code after the city name to make the search more precise. For example, London, GB.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }))),\n    endAdornment: isSearching && /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), error && /*#__PURE__*/React.createElement(Typography, {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, error)))));\n}","map":{"version":3,"sources":["C:/Users/Marija/react-weather/src/components/WeatherSearch.js"],"names":["React","useEffect","useState","CircularProgress","FormControl","Grid","Input","InputAdornment","InputLabel","Tooltip","Typography","Search","makeStyles","useStyles","theme","error","color","padding","search","marginTop","WeatherSearch","props","classes","onCityChange","searchTerm","setSearchTerm","isSearching","setSearching","hasError","handleSearch","event","target","value","debouncedSearchTerm","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Tooltip,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"red\",\r\n    padding: \"10px\"\r\n  },\r\n  search: {\r\n    marginTop: \"10px\"\r\n  }\r\n}));\r\n\r\nexport default function WeatherSearch(props) {\r\n  const classes = useStyles();\r\n  const { onCityChange, error } = props;\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isSearching, setSearching] = useState(false);\r\n  //const debouncedSearchTerm = useDebounce(searchTerm, 1000);\r\n  const hasError = error ? true : false;\r\n\r\n  const handleSearch = event => {\r\n    setSearching(true);\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearchTerm) {\r\n      onCityChange(debouncedSearchTerm);\r\n      setSearching(false);\r\n    }\r\n  }, [onCityChange, debouncedSearchTerm, isSearching]);\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <Grid container alignItems=\"flex-end\">\r\n        <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"search-city\">Unesi naziv grada:</InputLabel>\r\n            <Input\r\n              id=\"search-city\"\r\n              role=\"search\"\r\n              type=\"text\"\r\n              error={hasError}\r\n              onChange={handleSearch}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <Tooltip title=\"Optional: Enter a two-letter country code after the city name to make the search more precise. For example, London, GB.\">\r\n                    <Search />\r\n                  </Tooltip>\r\n                </InputAdornment>\r\n              }\r\n              endAdornment={\r\n                isSearching && (\r\n                  <InputAdornment position=\"end\">\r\n                    <CircularProgress size={20} />\r\n                  </InputAdornment>\r\n                )\r\n              }\r\n            />\r\n            {error && (\r\n              <Typography className={classes.error}>{error}</Typography>\r\n            )}\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}